<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Pezos\Generated\Rollup\Model;

class ConfigGetResponse200Batcher extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * @var int
     */
    protected $minBatchElements;
    /**
     * @var int
     */
    protected $minBatchSize;
    /**
     * @var int
     */
    protected $maxBatchElements;
    /**
     * @var int
     */
    protected $maxBatchSize;

    public function getMinBatchElements(): int
    {
        return $this->minBatchElements;
    }

    public function setMinBatchElements(int $minBatchElements): self
    {
        $this->initialized['minBatchElements'] = true;
        $this->minBatchElements = $minBatchElements;

        return $this;
    }

    public function getMinBatchSize(): int
    {
        return $this->minBatchSize;
    }

    public function setMinBatchSize(int $minBatchSize): self
    {
        $this->initialized['minBatchSize'] = true;
        $this->minBatchSize = $minBatchSize;

        return $this;
    }

    public function getMaxBatchElements(): int
    {
        return $this->maxBatchElements;
    }

    public function setMaxBatchElements(int $maxBatchElements): self
    {
        $this->initialized['maxBatchElements'] = true;
        $this->maxBatchElements = $maxBatchElements;

        return $this;
    }

    public function getMaxBatchSize(): int
    {
        return $this->maxBatchSize;
    }

    public function setMaxBatchSize(int $maxBatchSize): self
    {
        $this->initialized['maxBatchSize'] = true;
        $this->maxBatchSize = $maxBatchSize;

        return $this;
    }
}
