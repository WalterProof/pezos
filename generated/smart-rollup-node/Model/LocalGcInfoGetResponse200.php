<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Pezos\Generated\Rollup\Model;

class LocalGcInfoGetResponse200 extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * First level where data is guaranteed to be available in the rollup node.
     *
     * @var int
     */
    protected $firstAvailableLevel;
    /**
     * The level at which the last GC was triggered.
     *
     * @var int
     */
    protected $lastGcLevel;
    /**
     * The level at which the context was split for the last time. Commits before this level are in other chunks.
     *
     * @var int
     */
    protected $lastContextSplitLevel;
    /**
     * The level which was the target of the last successful GC.
     *
     * @var int
     */
    protected $lastSuccessfulGcTarget;

    /**
     * First level where data is guaranteed to be available in the rollup node.
     */
    public function getFirstAvailableLevel(): int
    {
        return $this->firstAvailableLevel;
    }

    /**
     * First level where data is guaranteed to be available in the rollup node.
     */
    public function setFirstAvailableLevel(int $firstAvailableLevel): self
    {
        $this->initialized['firstAvailableLevel'] = true;
        $this->firstAvailableLevel = $firstAvailableLevel;

        return $this;
    }

    /**
     * The level at which the last GC was triggered.
     */
    public function getLastGcLevel(): int
    {
        return $this->lastGcLevel;
    }

    /**
     * The level at which the last GC was triggered.
     */
    public function setLastGcLevel(int $lastGcLevel): self
    {
        $this->initialized['lastGcLevel'] = true;
        $this->lastGcLevel = $lastGcLevel;

        return $this;
    }

    /**
     * The level at which the context was split for the last time. Commits before this level are in other chunks.
     */
    public function getLastContextSplitLevel(): int
    {
        return $this->lastContextSplitLevel;
    }

    /**
     * The level at which the context was split for the last time. Commits before this level are in other chunks.
     */
    public function setLastContextSplitLevel(int $lastContextSplitLevel): self
    {
        $this->initialized['lastContextSplitLevel'] = true;
        $this->lastContextSplitLevel = $lastContextSplitLevel;

        return $this;
    }

    /**
     * The level which was the target of the last successful GC.
     */
    public function getLastSuccessfulGcTarget(): int
    {
        return $this->lastSuccessfulGcTarget;
    }

    /**
     * The level which was the target of the last successful GC.
     */
    public function setLastSuccessfulGcTarget(int $lastSuccessfulGcTarget): self
    {
        $this->initialized['lastSuccessfulGcTarget'] = true;
        $this->lastSuccessfulGcTarget = $lastSuccessfulGcTarget;

        return $this;
    }
}
