<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Bzzhh\Pezos\Generated\Proto\Model;

class ContextContractsContractIdAllTicketBalancesGetResponse200Item extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * A contract notation as given to an RPC or inside scripts. Can be a base58 implicit contract hash or a base58 originated contract hash.
     */
    protected $ticketer;

    protected $contentType;

    protected $content;
    /**
     * Decimal representation of a positive big number.
     *
     * @var string
     */
    protected $amount;

    /**
     * A contract notation as given to an RPC or inside scripts. Can be a base58 implicit contract hash or a base58 originated contract hash.
     */
    public function getTicketer()
    {
        return $this->ticketer;
    }

    /**
     * A contract notation as given to an RPC or inside scripts. Can be a base58 implicit contract hash or a base58 originated contract hash.
     */
    public function setTicketer($ticketer): self
    {
        $this->initialized['ticketer'] = true;
        $this->ticketer = $ticketer;

        return $this;
    }

    public function getContentType()
    {
        return $this->contentType;
    }

    public function setContentType($contentType): self
    {
        $this->initialized['contentType'] = true;
        $this->contentType = $contentType;

        return $this;
    }

    public function getContent()
    {
        return $this->content;
    }

    public function setContent($content): self
    {
        $this->initialized['content'] = true;
        $this->content = $content;

        return $this;
    }

    /**
     * Decimal representation of a positive big number.
     */
    public function getAmount(): string
    {
        return $this->amount;
    }

    /**
     * Decimal representation of a positive big number.
     */
    public function setAmount(string $amount): self
    {
        $this->initialized['amount'] = true;
        $this->amount = $amount;

        return $this;
    }
}
