<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Pezos\Generated\Proto\Model;

class HelpersScriptsRunInstructionPostBody extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * @var list<HelpersScriptsRunInstructionPostBodyInputItem>
     */
    protected $input;
    protected $code;
    protected $chainId;
    /**
     * Decimal representation of a big number.
     *
     * @var string
     */
    protected $gas;
    /**
     * Decimal representation of a big number.
     *
     * @var string
     */
    protected $now;
    /**
     * Decimal representation of a positive big number.
     *
     * @var string
     */
    protected $level;
    /**
     * A contract notation as given to an RPC or inside scripts. Can be a base58 implicit contract hash or a base58 originated contract hash.
     */
    protected $sender;
    /**
     * A contract notation as given to an RPC or inside scripts. Can be a base58 implicit contract hash.
     */
    protected $source;
    /**
     * A contract notation as given to an RPC or inside scripts. Can be a base58 originated contract hash.
     */
    protected $self;
    protected $parameter;
    /**
     * Decimal representation of a positive big number.
     *
     * @var string
     */
    protected $amount;
    /**
     * Decimal representation of a positive big number.
     *
     * @var string
     */
    protected $balance;
    /**
     * @var list<HelpersScriptsRunInstructionPostBodyOtherContractsItem>
     */
    protected $otherContracts;
    /**
     * @var list<HelpersScriptsRunInstructionPostBodyBigMapsItem>
     */
    protected $bigMaps;
    protected $unparsingMode;
    /**
     * @var bool
     */
    protected $legacy;

    /**
     * @return list<HelpersScriptsRunInstructionPostBodyInputItem>
     */
    public function getInput(): array
    {
        return $this->input;
    }

    /**
     * @param list<HelpersScriptsRunInstructionPostBodyInputItem> $input
     */
    public function setInput(array $input): self
    {
        $this->initialized['input'] = true;
        $this->input = $input;

        return $this;
    }

    public function getCode()
    {
        return $this->code;
    }

    public function setCode($code): self
    {
        $this->initialized['code'] = true;
        $this->code = $code;

        return $this;
    }

    public function getChainId()
    {
        return $this->chainId;
    }

    public function setChainId($chainId): self
    {
        $this->initialized['chainId'] = true;
        $this->chainId = $chainId;

        return $this;
    }

    /**
     * Decimal representation of a big number.
     */
    public function getGas(): string
    {
        return $this->gas;
    }

    /**
     * Decimal representation of a big number.
     */
    public function setGas(string $gas): self
    {
        $this->initialized['gas'] = true;
        $this->gas = $gas;

        return $this;
    }

    /**
     * Decimal representation of a big number.
     */
    public function getNow(): string
    {
        return $this->now;
    }

    /**
     * Decimal representation of a big number.
     */
    public function setNow(string $now): self
    {
        $this->initialized['now'] = true;
        $this->now = $now;

        return $this;
    }

    /**
     * Decimal representation of a positive big number.
     */
    public function getLevel(): string
    {
        return $this->level;
    }

    /**
     * Decimal representation of a positive big number.
     */
    public function setLevel(string $level): self
    {
        $this->initialized['level'] = true;
        $this->level = $level;

        return $this;
    }

    /**
     * A contract notation as given to an RPC or inside scripts. Can be a base58 implicit contract hash or a base58 originated contract hash.
     */
    public function getSender()
    {
        return $this->sender;
    }

    /**
     * A contract notation as given to an RPC or inside scripts. Can be a base58 implicit contract hash or a base58 originated contract hash.
     */
    public function setSender($sender): self
    {
        $this->initialized['sender'] = true;
        $this->sender = $sender;

        return $this;
    }

    /**
     * A contract notation as given to an RPC or inside scripts. Can be a base58 implicit contract hash.
     */
    public function getSource()
    {
        return $this->source;
    }

    /**
     * A contract notation as given to an RPC or inside scripts. Can be a base58 implicit contract hash.
     */
    public function setSource($source): self
    {
        $this->initialized['source'] = true;
        $this->source = $source;

        return $this;
    }

    /**
     * A contract notation as given to an RPC or inside scripts. Can be a base58 originated contract hash.
     */
    public function getSelf()
    {
        return $this->self;
    }

    /**
     * A contract notation as given to an RPC or inside scripts. Can be a base58 originated contract hash.
     */
    public function setSelf($self): self
    {
        $this->initialized['self'] = true;
        $this->self = $self;

        return $this;
    }

    public function getParameter()
    {
        return $this->parameter;
    }

    public function setParameter($parameter): self
    {
        $this->initialized['parameter'] = true;
        $this->parameter = $parameter;

        return $this;
    }

    /**
     * Decimal representation of a positive big number.
     */
    public function getAmount(): string
    {
        return $this->amount;
    }

    /**
     * Decimal representation of a positive big number.
     */
    public function setAmount(string $amount): self
    {
        $this->initialized['amount'] = true;
        $this->amount = $amount;

        return $this;
    }

    /**
     * Decimal representation of a positive big number.
     */
    public function getBalance(): string
    {
        return $this->balance;
    }

    /**
     * Decimal representation of a positive big number.
     */
    public function setBalance(string $balance): self
    {
        $this->initialized['balance'] = true;
        $this->balance = $balance;

        return $this;
    }

    /**
     * @return list<HelpersScriptsRunInstructionPostBodyOtherContractsItem>
     */
    public function getOtherContracts(): array
    {
        return $this->otherContracts;
    }

    /**
     * @param list<HelpersScriptsRunInstructionPostBodyOtherContractsItem> $otherContracts
     */
    public function setOtherContracts(array $otherContracts): self
    {
        $this->initialized['otherContracts'] = true;
        $this->otherContracts = $otherContracts;

        return $this;
    }

    /**
     * @return list<HelpersScriptsRunInstructionPostBodyBigMapsItem>
     */
    public function getBigMaps(): array
    {
        return $this->bigMaps;
    }

    /**
     * @param list<HelpersScriptsRunInstructionPostBodyBigMapsItem> $bigMaps
     */
    public function setBigMaps(array $bigMaps): self
    {
        $this->initialized['bigMaps'] = true;
        $this->bigMaps = $bigMaps;

        return $this;
    }

    public function getUnparsingMode()
    {
        return $this->unparsingMode;
    }

    public function setUnparsingMode($unparsingMode): self
    {
        $this->initialized['unparsingMode'] = true;
        $this->unparsingMode = $unparsingMode;

        return $this;
    }

    public function getLegacy(): bool
    {
        return $this->legacy;
    }

    public function setLegacy(bool $legacy): self
    {
        $this->initialized['legacy'] = true;
        $this->legacy = $legacy;

        return $this;
    }
}
