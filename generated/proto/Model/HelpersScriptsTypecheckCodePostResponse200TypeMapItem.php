<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Bzzhh\Pezos\Generated\Proto\Model;

class HelpersScriptsTypecheckCodePostResponse200TypeMapItem extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * The location of a node in a Micheline expression tree in prefix order, with zero being the root and adding one for every basic node, sequence and primitive application.
     *
     * @var int
     */
    protected $location;
    /**
     * @var mixed[]
     */
    protected $stackBefore;
    /**
     * @var mixed[]
     */
    protected $stackAfter;

    /**
     * The location of a node in a Micheline expression tree in prefix order, with zero being the root and adding one for every basic node, sequence and primitive application.
     */
    public function getLocation(): int
    {
        return $this->location;
    }

    /**
     * The location of a node in a Micheline expression tree in prefix order, with zero being the root and adding one for every basic node, sequence and primitive application.
     */
    public function setLocation(int $location): self
    {
        $this->initialized['location'] = true;
        $this->location = $location;

        return $this;
    }

    /**
     * @return mixed[]
     */
    public function getStackBefore(): array
    {
        return $this->stackBefore;
    }

    /**
     * @param mixed[] $stackBefore
     */
    public function setStackBefore(array $stackBefore): self
    {
        $this->initialized['stackBefore'] = true;
        $this->stackBefore = $stackBefore;

        return $this;
    }

    /**
     * @return mixed[]
     */
    public function getStackAfter(): array
    {
        return $this->stackAfter;
    }

    /**
     * @param mixed[] $stackAfter
     */
    public function setStackAfter(array $stackAfter): self
    {
        $this->initialized['stackAfter'] = true;
        $this->stackAfter = $stackAfter;

        return $this;
    }
}
