<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Bzzhh\Pezos\Generated\Shell\Model;

class NetworkPeersPeerIdPatchResponse200PeerMetadataResponses extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }

    protected $sent;

    protected $failed;

    protected $received;
    /**
     * Decimal representation of a big number.
     *
     * @var string
     */
    protected $unexpected;
    /**
     * Decimal representation of a big number.
     *
     * @var string
     */
    protected $outdated;

    public function getSent()
    {
        return $this->sent;
    }

    public function setSent($sent): self
    {
        $this->initialized['sent'] = true;
        $this->sent = $sent;

        return $this;
    }

    public function getFailed()
    {
        return $this->failed;
    }

    public function setFailed($failed): self
    {
        $this->initialized['failed'] = true;
        $this->failed = $failed;

        return $this;
    }

    public function getReceived()
    {
        return $this->received;
    }

    public function setReceived($received): self
    {
        $this->initialized['received'] = true;
        $this->received = $received;

        return $this;
    }

    /**
     * Decimal representation of a big number.
     */
    public function getUnexpected(): string
    {
        return $this->unexpected;
    }

    /**
     * Decimal representation of a big number.
     */
    public function setUnexpected(string $unexpected): self
    {
        $this->initialized['unexpected'] = true;
        $this->unexpected = $unexpected;

        return $this;
    }

    /**
     * Decimal representation of a big number.
     */
    public function getOutdated(): string
    {
        return $this->outdated;
    }

    /**
     * Decimal representation of a big number.
     */
    public function setOutdated(string $outdated): self
    {
        $this->initialized['outdated'] = true;
        $this->outdated = $outdated;

        return $this;
    }
}
