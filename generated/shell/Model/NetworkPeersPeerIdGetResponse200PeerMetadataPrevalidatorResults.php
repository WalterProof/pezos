<?php

declare(strict_types=1);

/*
 * This file has been auto generated by Jane,
 *
 * Do no edit it directly.
 */

namespace Pezos\Generated\Shell\Model;

class NetworkPeersPeerIdGetResponse200PeerMetadataPrevalidatorResults extends \ArrayObject
{
    /**
     * @var array
     */
    protected $initialized = [];

    public function isInitialized($property): bool
    {
        return array_key_exists($property, $this->initialized);
    }
    /**
     * Decimal representation of a big number.
     *
     * @var string
     */
    protected $cannotDownload;
    /**
     * Decimal representation of a big number.
     *
     * @var string
     */
    protected $cannotParse;
    /**
     * Decimal representation of a big number.
     *
     * @var string
     */
    protected $refusedByPrefilter;
    /**
     * Decimal representation of a big number.
     *
     * @var string
     */
    protected $refusedByPostfilter;
    /**
     * Decimal representation of a big number.
     *
     * @var string
     */
    protected $applied;
    /**
     * Decimal representation of a big number.
     *
     * @var string
     */
    protected $branchDelayed;
    /**
     * Decimal representation of a big number.
     *
     * @var string
     */
    protected $branchRefused;
    /**
     * Decimal representation of a big number.
     *
     * @var string
     */
    protected $refused;
    /**
     * Decimal representation of a big number.
     *
     * @var string
     */
    protected $duplicate;
    /**
     * Decimal representation of a big number.
     *
     * @var string
     */
    protected $outdated;

    /**
     * Decimal representation of a big number.
     */
    public function getCannotDownload(): string
    {
        return $this->cannotDownload;
    }

    /**
     * Decimal representation of a big number.
     */
    public function setCannotDownload(string $cannotDownload): self
    {
        $this->initialized['cannotDownload'] = true;
        $this->cannotDownload = $cannotDownload;

        return $this;
    }

    /**
     * Decimal representation of a big number.
     */
    public function getCannotParse(): string
    {
        return $this->cannotParse;
    }

    /**
     * Decimal representation of a big number.
     */
    public function setCannotParse(string $cannotParse): self
    {
        $this->initialized['cannotParse'] = true;
        $this->cannotParse = $cannotParse;

        return $this;
    }

    /**
     * Decimal representation of a big number.
     */
    public function getRefusedByPrefilter(): string
    {
        return $this->refusedByPrefilter;
    }

    /**
     * Decimal representation of a big number.
     */
    public function setRefusedByPrefilter(string $refusedByPrefilter): self
    {
        $this->initialized['refusedByPrefilter'] = true;
        $this->refusedByPrefilter = $refusedByPrefilter;

        return $this;
    }

    /**
     * Decimal representation of a big number.
     */
    public function getRefusedByPostfilter(): string
    {
        return $this->refusedByPostfilter;
    }

    /**
     * Decimal representation of a big number.
     */
    public function setRefusedByPostfilter(string $refusedByPostfilter): self
    {
        $this->initialized['refusedByPostfilter'] = true;
        $this->refusedByPostfilter = $refusedByPostfilter;

        return $this;
    }

    /**
     * Decimal representation of a big number.
     */
    public function getApplied(): string
    {
        return $this->applied;
    }

    /**
     * Decimal representation of a big number.
     */
    public function setApplied(string $applied): self
    {
        $this->initialized['applied'] = true;
        $this->applied = $applied;

        return $this;
    }

    /**
     * Decimal representation of a big number.
     */
    public function getBranchDelayed(): string
    {
        return $this->branchDelayed;
    }

    /**
     * Decimal representation of a big number.
     */
    public function setBranchDelayed(string $branchDelayed): self
    {
        $this->initialized['branchDelayed'] = true;
        $this->branchDelayed = $branchDelayed;

        return $this;
    }

    /**
     * Decimal representation of a big number.
     */
    public function getBranchRefused(): string
    {
        return $this->branchRefused;
    }

    /**
     * Decimal representation of a big number.
     */
    public function setBranchRefused(string $branchRefused): self
    {
        $this->initialized['branchRefused'] = true;
        $this->branchRefused = $branchRefused;

        return $this;
    }

    /**
     * Decimal representation of a big number.
     */
    public function getRefused(): string
    {
        return $this->refused;
    }

    /**
     * Decimal representation of a big number.
     */
    public function setRefused(string $refused): self
    {
        $this->initialized['refused'] = true;
        $this->refused = $refused;

        return $this;
    }

    /**
     * Decimal representation of a big number.
     */
    public function getDuplicate(): string
    {
        return $this->duplicate;
    }

    /**
     * Decimal representation of a big number.
     */
    public function setDuplicate(string $duplicate): self
    {
        $this->initialized['duplicate'] = true;
        $this->duplicate = $duplicate;

        return $this;
    }

    /**
     * Decimal representation of a big number.
     */
    public function getOutdated(): string
    {
        return $this->outdated;
    }

    /**
     * Decimal representation of a big number.
     */
    public function setOutdated(string $outdated): self
    {
        $this->initialized['outdated'] = true;
        $this->outdated = $outdated;

        return $this;
    }
}
